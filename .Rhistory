repeat{
#cat("HOLA SENAMHI, QUE GUSTO SALUDARTE. \n para el pronostico mensual por favor elija una opcion: \n 1. ENE-FEB-MAR: \n 2. FEB-MAR-ABR: \n 3. MAR-ABR-MAY: \n 4. ABR-MAY-JUN: \n 5. MAY-JUN-JUL: \n 6. JUN-JUL-AGO: \n 7. JUL-AGO-SEP: \n 8. AGO-SEP-OCT: \n 9. SEP-OCT-NOV: \n 10. OCT-NOV-DIC: \n 11. NOV-DIC-ENE: \n 12. DIC-ENE-FEB: \n 0. SALIR \n")
cat("HOLA SENAMHI, QUE GUSTO SALUDARTE  :) \n para el pronostico mensual por favor elija una opcion: \n 1. ENERO: \n 2. FEBRERO: \n 3. MARZO: \n 4. ABRIL: \n 5. MAYO: \n 6. JUNIO: \n 7. JULIO: \n 8. AGOSTO: \n 9. SEPTIEMBRE: \n 10. OCTUBRE: \n 11. NOVIEMBRE: \n 12. DICIEMBRE: \n 0. SALIR \n")
#num0<-scan(nmax = 1)
#
entrada_valida <- FALSE  # Inicializamos una variable para controlar la validez
while (!entrada_valida) {  # Bucle hasta obtener una entrada válida
cat("Elija una opcion: ")
entrada <- tryCatch({
num0 <- scan(what = numeric(), nmax = 1, quiet = TRUE)
if (length(num0) == 1) {
entrada_valida <- TRUE  # Si es numérico, marcamos la entrada como válida
# Devolvemos el valor
} else {
stop("Entrada no válida.")  # Forzamos un error si no es numérico
}
}, error = function(e) {
cat("Por favor, introduce solo números.\n")  # Mensaje de error
#NA  # Retornamos NA para reintentar
})
}
#
Aerop<-function(num0){
dia<-paste(format(ISOdate(2000, 1:12, 1), "%B"),2025)#c("ENE-FEB-MAR:","FEB-MAR-ABR:","MAR-ABR-MAY:","ABR-MAY-JUN:","MAY-JUN-JUL:","JUN-JUL-AGO:","JUL-AGO-SEP:","AGO-SEP-OCT:","SEP-OCT-NOV:","OCT-NOV-DIC:","NOV-DIC-ENE",'DIC-ENE-FEB:')
if(num0>=1&num0<=12){
cat(paste("Usted eligio el pronostico para el mes de:", '"',dia[num0],'"',"\n"))
return(55)
}else{
return(7)
}
}
num0
if(num0==0){
cat("NO SE REALIZO NINGUNA TAREA ");break}
#if(num0>12){next}
if(Aerop(num0)==55){break}
if(Aerop(num0)==7){cat('POR FAVOR VUELVA A INTENTAR...!!!\n Marque un numero de acuerdo a las opciones, gracias...! \n');next}
#if((num1==8|num1==9))break
}
}else{
break
}
return(num0)
}
#
run<-sprintf("%.2d", 1:12)
name<-c('Aleman','Americano','Canadiense','Europeo','Frances','Italiano','Japones','Reyno_Unido')
while (!is.numeric(num1)) {
num1<-cbba(cb=cb)
}
num1
num2<-1
while (num2<2) {
num1<-cbba(cb=cb);
num2<-num2+num1
}
old
getwd()
#
#rm(list = ls())
# names(a)<-date
# date %>% length()
rm(list = ls())
gc();gc();gc()
cat('Para continuar marque "senamhi"')
cb <- "senamhi"#scan(what = character(), nmax = 1, quiet = TRUE)
cbba<-function(cb){
if(cb=='senamhi'){
repeat{
#cat("HOLA SENAMHI, QUE GUSTO SALUDARTE. \n para el pronostico mensual por favor elija una opcion: \n 1. ENE-FEB-MAR: \n 2. FEB-MAR-ABR: \n 3. MAR-ABR-MAY: \n 4. ABR-MAY-JUN: \n 5. MAY-JUN-JUL: \n 6. JUN-JUL-AGO: \n 7. JUL-AGO-SEP: \n 8. AGO-SEP-OCT: \n 9. SEP-OCT-NOV: \n 10. OCT-NOV-DIC: \n 11. NOV-DIC-ENE: \n 12. DIC-ENE-FEB: \n 0. SALIR \n")
cat("HOLA SENAMHI, QUE GUSTO SALUDARTE  :) \n para el pronostico mensual por favor elija una opcion: \n 1. ENERO: \n 2. FEBRERO: \n 3. MARZO: \n 4. ABRIL: \n 5. MAYO: \n 6. JUNIO: \n 7. JULIO: \n 8. AGOSTO: \n 9. SEPTIEMBRE: \n 10. OCTUBRE: \n 11. NOVIEMBRE: \n 12. DICIEMBRE: \n 0. SALIR \n")
#num0<-scan(nmax = 1)
#
entrada_valida <- FALSE  # Inicializamos una variable para controlar la validez
while (!entrada_valida) {  # Bucle hasta obtener una entrada válida
cat("Elija una opcion: ")
entrada <- tryCatch({
num0 <- scan(what = numeric(), nmax = 1, quiet = TRUE)
if (length(num0) == 1) {
entrada_valida <- TRUE  # Si es numérico, marcamos la entrada como válida
# Devolvemos el valor
} else {
stop("Entrada no válida.")  # Forzamos un error si no es numérico
}
}, error = function(e) {
cat("Por favor, introduce solo números.\n")  # Mensaje de error
#NA  # Retornamos NA para reintentar
})
}
#
Aerop<-function(num0){
dia<-paste(format(ISOdate(2000, 1:12, 1), "%B"),2025)#c("ENE-FEB-MAR:","FEB-MAR-ABR:","MAR-ABR-MAY:","ABR-MAY-JUN:","MAY-JUN-JUL:","JUN-JUL-AGO:","JUL-AGO-SEP:","AGO-SEP-OCT:","SEP-OCT-NOV:","OCT-NOV-DIC:","NOV-DIC-ENE",'DIC-ENE-FEB:')
if(num0>=1&num0<=12){
cat(paste("Usted eligio el pronostico para el mes de:", '"',dia[num0],'"',"\n"))
return(55)
}else{
return(7)
}
}
num0
if(num0==0){
cat("NO SE REALIZO NINGUNA TAREA ");break}
#if(num0>12){next}
if(Aerop(num0)==55){break}
if(Aerop(num0)==7){cat('POR FAVOR VUELVA A INTENTAR...!!!\n Marque un numero de acuerdo a las opciones, gracias...! \n');next}
#if((num1==8|num1==9))break
}
}else{
break
}
return(num0)
}
#
run<-sprintf("%.2d", 1:12)
name<-c('Aleman','Americano','Canadiense','Europeo','Frances','Italiano','Japones','Reyno_Unido')
num2<-1
while (num2<2) {
num1<-cbba(cb=cb);
num2<-num2+num1
}
0
devtools::document()
rm(list = ls())
gc();gc();gc()
cat('Para continuar marque "senamhi"')
cb <- "senamhi"#scan(what = character(), nmax = 1, quiet = TRUE)
cbba<-function(cb){
if(cb=='senamhi'){
repeat{
#cat("HOLA SENAMHI, QUE GUSTO SALUDARTE. \n para el pronostico mensual por favor elija una opcion: \n 1. ENE-FEB-MAR: \n 2. FEB-MAR-ABR: \n 3. MAR-ABR-MAY: \n 4. ABR-MAY-JUN: \n 5. MAY-JUN-JUL: \n 6. JUN-JUL-AGO: \n 7. JUL-AGO-SEP: \n 8. AGO-SEP-OCT: \n 9. SEP-OCT-NOV: \n 10. OCT-NOV-DIC: \n 11. NOV-DIC-ENE: \n 12. DIC-ENE-FEB: \n 0. SALIR \n")
cat("HOLA SENAMHI, QUE GUSTO SALUDARTE  :) \n para el pronostico mensual por favor elija una opcion: \n 1. ENERO: \n 2. FEBRERO: \n 3. MARZO: \n 4. ABRIL: \n 5. MAYO: \n 6. JUNIO: \n 7. JULIO: \n 8. AGOSTO: \n 9. SEPTIEMBRE: \n 10. OCTUBRE: \n 11. NOVIEMBRE: \n 12. DICIEMBRE: \n 0. SALIR \n")
#num0<-scan(nmax = 1)
#
entrada_valida <- FALSE  # Inicializamos una variable para controlar la validez
while (!entrada_valida) {  # Bucle hasta obtener una entrada válida
cat("Elija una opcion: ")
entrada <- tryCatch({
num0 <- scan(what = numeric(), nmax = 1, quiet = TRUE)
if (length(num0) == 1) {
entrada_valida <- TRUE  # Si es numérico, marcamos la entrada como válida
# Devolvemos el valor
} else {
stop("Entrada no válida.")  # Forzamos un error si no es numérico
}
}, error = function(e) {
cat("Por favor, introduce solo números.\n")  # Mensaje de error
#NA  # Retornamos NA para reintentar
})
}
#
Aerop<-function(num0){
dia<-paste(format(ISOdate(2000, 1:12, 1), "%B"),2025)#c("ENE-FEB-MAR:","FEB-MAR-ABR:","MAR-ABR-MAY:","ABR-MAY-JUN:","MAY-JUN-JUL:","JUN-JUL-AGO:","JUL-AGO-SEP:","AGO-SEP-OCT:","SEP-OCT-NOV:","OCT-NOV-DIC:","NOV-DIC-ENE",'DIC-ENE-FEB:')
if(num0>=1&num0<=12){
cat(paste("Usted eligio el pronostico para el mes de:", '"',dia[num0],'"',"\n"))
return(55)
}else{
return(7)
}
}
num0
if(num0==0){
cat("NO SE REALIZO NINGUNA TAREA ");break}
#if(num0>12){next}
if(Aerop(num0)==55){break}
if(Aerop(num0)==7){cat('POR FAVOR VUELVA A INTENTAR...!!!\n Marque un numero de acuerdo a las opciones, gracias...! \n');next}
#if((num1==8|num1==9))break
}
}else{
break
}
return(num0)
}
num1<-cbba(cb=cb)
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
# dir.create(paste('Pronostico_','para_',mes[num1],2025))
#
# setwd(paste('Pronostico_','para_',mes[num1],2025))
#
# dir.create(paste0('DATASET_nc_',2025))
# dir.create(paste0('MODELOS-IMAGWEN-',2025))
# setwd(paste0('DATASET_nc_',2025))
# dir()
getwd()
# dir.create(paste('Pronostico_','para_',mes[num1],2025))
#
# setwd(paste('Pronostico_','para_',mes[num1],2025))
#
# dir.create(paste0('DATASET_nc_',2025))
# dir.create(paste0('MODELOS-IMAGWEN-',2025))
# setwd(paste0('DATASET_nc_',2025))
# dir()
setwd('/home/nihelruiz/Downloads/')
laod(url('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip'))
load(url('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip'))
load(url('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip'))
# dir.create(paste('Pronostico_','para_',mes[num1],2025))
#
# setwd(paste('Pronostico_','para_',mes[num1],2025))
#
# dir.create(paste0('DATASET_nc_',2025))
# dir.create(paste0('MODELOS-IMAGWEN-',2025))
# setwd(paste0('DATASET_nc_',2025))
# dir()
setwd('/home/nihelruiz/Downloads/')
download.file(url('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip'))
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip')
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip','dddd.zip')
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip')
?download.file
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip','dddd.zip')
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip','forecast.zip')
# getwd()
unzip(paste0('forecast','.zip'))
dir()
download.file('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/file_nc_enero.zip','forecast.zip')
# getwd()
unzip(paste0('forecast','.zip'))
setwd('forecast')
num1
# names(a)<-date
# date %>% length()
num1<-1
paste0('file_nc_',mes[num1])
run<-sprintf("%.2d", 1:12)
name<-c('Aleman','Americano','Canadiense','Europeo','Frances','Italiano','Japones','Reyno_Unido')
mes<-c('enero','febrero','marzo','abril','mayo','junio','julio','agosto','septiembre','octubre','noviembre','diciembre')
paste0('file_nc_',mes[num1])
setwd(paste0('file_nc_',mes[num1]))
dir()
#
# #setwd(old)
#
lis<-list.files('./',pattern = '.nc',full.names = T)
lis
#j<-1;i<-2
source('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/R/run2.R')
library(terra)
pacman::p_load(tidyverse,terra,raster,sf,tidyterra,ggimage,ragg,glue,ggspatial)
#
pacman::p_load(tidyverse,terra,raster,sf,tidyterra,ggimage,ragg,glue,ggspatial)
#j<-1;i<-2
source('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/R/run2.R')
old
old<-getwd()
getwd()
#j<-1;i<-2
source('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/R/run2.R')
'Pronostico_','para_',mes[num1],2025)
'Pronostico_','para_',mes[num1],2025)
mes
num1
paste('Pronostico_','para_',mes[num1],2025)
(paste('Pronostico_','para_',mes[num1],'_2025')
(paste('Pronostico_','para_',mes[num1],'_2025')
(paste('Pronostico_','para_',mes[num1],'_2025')
paste('Pronostico_','para_',mes[num1],'_2025')
paste('Pronostico_','para_',mes[num1],'_2025')
paste0('Pronostico_','para_',mes[num1],'_2025')
paste0('MODELOS-IMAGWEN','_2025')
paste0('Pronostico_','para_',mes[num1],'_2025')
glue('{names(e)}.png')
glue('{names(e)}.png')
bol0<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/L%C3%ADmite%20Nacional.shp')
bol0
#plot(municipios)
img1<-data.frame(x=-59,y=-10.5,img='https://github.com/ruiz22112703/senamhiPronostico/blob/main/SHAPE%20OFICIAL/LOGOSENAMHI.png')
img1
plot(img1)
#plot(municipios)
img1<-data.frame(x=-59,y=-10.5,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/LOGOSENAMHI.png')
img1
plot(img1)
plot(img2)
#
pacman::p_load(tidyverse,terra,raster,sf,tidyterra,ggimage,ragg,glue,ggspatial)
gc();gc()
bol0<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/L%C3%ADmite%20Nacional.shp')
bol<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/L%C3%ADmite%20Departamental.shp')
macro<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/Macroregiones.shp')
lagos<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/lagos_SNHN2016.shp')
#a
#plot(a[[510:519]])
#plot(bol0)
municipios<-vect('https://github.com/ruiz22112703/senamhiPronostico/raw/refs/heads/main/SHAPE%20OFICIAL/L%C3%ADmite%20Provincial.shp')
#plot(municipios)
img1<-data.frame(x=-59,y=-10.5,img='https://github.com/ruiz22112703/senamhiPronostico/blob/main/SHAPE%20OFICIAL/LOGOSENAMHI.png')
img2<-data.frame(x=-59,y=-21.9,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/LEYENDAMAPA.png')
escala<-data.frame(x=-62,y=-10.5,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/NORTE.png')
lagos<-vect('/home/nihelruiz/Documents/2024/SHAPE OFICIAL/lagos_SNHN2016.shp')
plot(lagos)
lagos<-vect('/home/nihelruiz/Documents/2024/SHAPE OFICIAL/lagos_SNHN2016.shp')
plot(lagos)
lagos<-vect('/home/nihelruiz/Documents/2024/SHAPE OFICIAL/Lagos y Lagunas.shp')
plot(lagos)
lagos<-vect('/home/nihelruiz/Documents/2024/SHAPE OFICIAL/Lagos y Lagunas.shp')
#
dist<-0.05
X<-seq(-71,-56,dist)
Y<-seq(-9,-25,-dist)
datosint<-expand.grid(x=X,y=Y)
gridded(datosint)<-~x+y
a2<-rast(datosint)
#--------------
#
a<-rast(lis[[j]])
a<-a*2629440*1000;a[a<= -60]<- -60;a[a>= 120]<- 120
b<-mask(crop(resample(a,a2),st_as_sf(bol0)),st_as_sf(bol0))
e<-b[[i]]
names(e)<-glue("SENAMHI-BOLIVIA, modelo: {name[j]}, mes: {mes[i]}-2025")
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')+
geom_sf(data=bol0,fill=NA,lwd=.3,color='black')+
geom_sf(data=macro,fill=NA,lwd=.5,color='black')+
geom_sf(data=salares,fill='lightblue',lwd=.6,color='blue')+
geom_image(data=img1,aes(x,y,image=img),size=0.2)+
geom_image(data=escala,aes(x,y,image=img),size=0.15)+
annotation_scale(location = "br", width_hint = 0.4) +
geom_image(data=img2,aes(x,y,image=img),size=0.2)+labs(x='Longitud',y='Latitud',fill='PROB EN %')+
geom_text(aes(x=-67, y=-23.5,fontface = "bold"),label=expression(paste(Psi," .",'(r,t) - ', '@senamhi.gob.bo & IA')),size=3.5)
#
pacman::p_load(tidyverse,terra,raster,sf,tidyterra,ggimage,ragg,glue,ggspatial)
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')+
geom_sf(data=bol0,fill=NA,lwd=.3,color='black')+
geom_sf(data=macro,fill=NA,lwd=.5,color='black')
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')+
geom_sf(data=bol0,fill=NA,lwd=.3,color='black')+
geom_sf(data=macro,fill=NA,lwd=.5,color='black')+
geom_sf(data=salares,fill='lightblue',lwd=.6,color='blue')+
geom_image(data=img1,aes(x,y,image=img),size=0.2)
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')+
geom_sf(data=bol0,fill=NA,lwd=.3,color='black')+
geom_sf(data=macro,fill=NA,lwd=.5,color='black')+
geom_sf(data=salares,fill='lightblue',lwd=.6,color='blue')
#plot(municipios)
img1<-data.frame(x=-59,y=-10.5,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/LOGOSENAMHI.png')
img2<-data.frame(x=-59,y=-21.9,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/LEYENDAMAPA.png')
escala<-data.frame(x=-62,y=-10.5,img='/home/nihelruiz/Documents/2024/SHAPE OFICIAL/NORTE.png')
names(e)<-glue("SENAMHI-BOLIVIA, modelo: {name[j]}, mes: {mes[i]}-2025")
ggplot()+geom_spatraster(data=e)+theme_bw()+facet_wrap(~lyr)+labs(fill='PROB EN %')+
theme(legend.position = c(1.1, 0.50),legend.background = element_rect(fill = "white",color='black'),
legend.key.height = unit (3, 'cm'),
legend.key.width = unit (2, 'cm'),plot.caption = element_text(size=16, color="black", face="italic")) +
scale_fill_gradientn(colours = c("red3","brown","yellow","white","beige",
"gray57","turquoise","seagreen4",'darkgreen'),
limits=c(-60,120),breaks = seq(-60,120,length.out=12),
labels=paste0(c(100,80,60,40,40,60,80,100,40,60,80,100),'%'),na.value = "transparent",
guide = guide_colorbar(barwidth = unit(0.5, "cm"),barheight = unit(17, "cm")))+
guides(fill = guide_legend(title.position = "right",direction = "vertical",
title.theme = element_text(angle = 90, size = 12, colour = "black"),
barheight = unit(1.2, "cm"), barwidth = unit(0.5, "cm"),
title.hjust = 0.5, raster = FALSE,
title = paste('B A J O          ',"          N O R M A L       ","           S O B R E"),reverse = TRUE))+
labs(title = glue("Pronostico de Precipitaciones con modelo: {name[j]}, mes: {mes[i]}-2025"),x='Longitud',y='Latitud')+
theme(
#plot.title = element_text(face = "bold"),  # Título en negrita
legend.title = element_text(face = "bold"),  # Título de la leyenda en negrita
legend.text = element_text(face = "bold")   # Texto de la leyenda en negrita
)+geom_sf(data=municipios,fill=NA,lwd=.2,color='gray')+
geom_sf(data=lagos,fill='darkblue',lwd=.2,color='darkblue')+
geom_sf(data=bol0,fill=NA,lwd=.3,color='black')+
geom_sf(data=macro,fill=NA,lwd=.5,color='black')+
geom_sf(data=salares,fill='lightblue',lwd=.6,color='blue')+
geom_image(data=img1,aes(x,y,image=img),size=0.2)+
geom_image(data=escala,aes(x,y,image=img),size=0.15)+
annotation_scale(location = "br", width_hint = 0.4) +
geom_image(data=img2,aes(x,y,image=img),size=0.2)+labs(x='Longitud',y='Latitud',fill='PROB EN %')+
geom_text(aes(x=-67, y=-23.5,fontface = "bold"),label=expression(paste(Psi," .",'(r,t) - ', '@senamhi.gob.bo & IA')),size=3.5)
#
# #setwd(old)
#
setwd('/home/nihelruiz/Documents/2024/modelos-forecast/nc/')
dir()
lis<-list.files('',pattern = '.nc',full.names = T)
lis
lis<-list.files(pattern = '.nc',full.names = T)
lis
j<-1
#
#--------------
#
a<-rast(lis[[j]])
# names(a)<-date
# date %>% length()
num1<-1
run<-sprintf("%.2d", 1:12)
name<-c('Aleman','Americano','Canadiense','Europeo','Frances','Italiano','Japones','Reyno_Unido')
mes<-c('enero','febrero','marzo','abril','mayo','junio','julio','agosto','septiembre','octubre','noviembre','diciembre')
old<-getwd()
old
